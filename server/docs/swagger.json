{
  "swagger": "2.0",
  "info": {
    "description": "This is server for My Diary App",
    "version": "1.0.0",
    "title": "My Diary API",
    "contact": {
      "email": ""
    }
  },
  "host": "https://my-diary-dev.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Entry",
      "description": "Everything about your Diary Entries",
      "externalDocs": {
      }
    },
    {
      "name": "User",
      "description": "Operations about user",
      "externalDocs": {
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/entries": {
      "post": {
        "tags": [
          "Entry"
        ],
        "summary": "Add a new entry by passing the title, and body of the entry on the request body",
        "description": "",
        "operationId": "addEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tittle",
            "description": "Title of of dairy entry that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "body of of dairy entry that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Entry"
        ],
        "summary": "Get all entries",
        "description": "Returns all entries",
        "operationId": "getAllEntry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "description": "user authentication token",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
  "/entries/{entryId}": {
    "put": {
      "tags": [
        "Entry"
      ],
      "summary": "Update an existing entry",
      "description": "",
      "operationId": "updateEntry",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "entryId",
          "in": "path",
          "description": "ID of pet to be updated",
          "required": true,
          "type": "integer",
          "format": "int64",
          "schema": {
            "$ref": "#/definitions/Entry"
          }
        },
        {
          "in": "body",
          "name": "title",
          "description": "Title of diary entry that needs to be updated",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Entry"
          }
        },
        {
          "in": "body",
          "name": "body",
          "description": "Body of diary entry that needs to be updated",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Entry"
          }
        }
      ],
      "responses": {
        "404": {
          "description": "Entry not found"
        },
        "405": {
          "description": "Validation exception"
        }
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets"
          ]
        }
      ]
    },
    "get": {
      "tags": [
        "Entry"
      ],
      "summary": "Find entry by ID",
      "description": "Returns a single diary entry",
      "operationId": "getentryById",
      "produces": [
        "application/xml",
        "application/json"
      ],
      "parameters": [
        {
          "name": "entryId",
          "in": "path",
          "description": "ID of pet to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {
            "$ref": "#/definitions/Entry"
          }
        },
        "400": {
          "description": "Invalid ID supplied"
        },
        "404": {
          "description": "Entry not found"
        }
      },
      "security": [
        {
          "api_key": []
        }
      ]
    },
    "delete": {
      "tags": [
        "Entry"
      ],
      "summary": "Deletes an entry",
      "description": "",
      "operationId": "deleteEntry",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "api_key",
          "in": "header",
          "required": false,
          "type": "string"
        },
        {
          "name": "entryId",
          "in": "path",
          "description": "Entry id to delete",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "400": {
          "description": "Invalid ID supplied"
        },
        "404": {
          "description": "Entry not found"
        }
      },
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets"
          ]
        }
      ]
    }
  },
  "/auth/signup": {
    "post": {
      "tags": [
        "User"
      ],
      "summary": "Create user",
      "description": "This can only be done by the logged in user.",
      "operationId": "createUser",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Created user object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SingUpPayload"
          }
        }
      ],
      "responses": {
        "default": {
          "description": "successful operation"
        }
      }
    }
  },
  "/auth/login": {
    "post": {
      "tags": [
        "User"
      ],
      "summary": "Logs user into the system",
      "description": "",
      "operationId": "loginUser",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "email",
          "in": "body",
          "description": "The user email for login",
          "required": true,
          "type": "string"
        },
        {
          "name": "password",
          "in": "body",
          "description": "The password for login in clear text",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {
            "type": "string"
          },
          "headers": {
            "X-Rate-Limit": {
              "type": "integer",
              "format": "int32",
              "description": "calls per hour allowed by the user"
            },
            "X-Expires-After": {
              "type": "string",
              "format": "date-time",
              "description": "date in UTC when token expires"
            }
          }
        },
        "400": {
          "description": "Invalid username/password supplied"
        }
      }
    }
  },
  "/auth/logout": {
    "get": {
      "tags": [
        "User"
      ],
      "summary": "Logs out current logged in user session",
      "description": "",
      "operationId": "logoutUser",
      "produces": [
        "application/json"
      ],
      "parameters": [],
      "responses": {
        "default": {
          "description": "successful operation"
        }
      }
    }
  },
  "/users/profile/entries": {
    "get": {
      "tags": [
        "User"
      ],
      "summary": "Get number of entries created by a user",
      "description": "",
      "operationId": "getUserEntryCount",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {
            "$ref": "#/definitions/User"
          }
        },
        "400": {
          "description": "Invalid username supplied"
        },
        "404": {
          "description": "User not found"
        }
      }
    }
  },
    "/users/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get details of a user",
        "description": "",
        "operationId": "getUserDetails",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "firstName",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "body",
            "name": "lastName",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "body",
            "name": "email",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "body",
            "name": "location",
            "description": "Updated user object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "format": "varchar"
        },
        "body": {
          "type": "string",
          "format": "text"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Entry"
      }
    },
    "SingUpPayload": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "SingUpPayload"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}